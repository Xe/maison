name: "Kubernetes"
on: 
  push:
    branches:
    - master
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Download secrets
      run: |
        mkdir ~/.ssh
        echo $FILE_DATA | base64 -d > ~/.ssh/id_rsa
        md5sum ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        $GIT_SSH_COMMAND git@ssh.tulpa.dev
        git clone git@ssh.tulpa.dev:cadey/within-terraform-secret within-terraform-secret
        env
      env:
        FILE_DATA: ${{ secrets.SSH_PRIVATE_KEY }}
        GIT_SSH_COMMAND: "ssh -i ~/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
    - name: Build container image
      run: |
        docker build -t xena/maison:$(echo $GITHUB_SHA | head -c7) .
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
        docker push xena/maison
      env:
        DOCKER_USERNAME: "xena"
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Dyson
      run: |
        curl https://xena.greedo.xeserv.us/files/dyson-linux-amd64-0.1.0.tgz | tar xz 
        cp ./dyson-linux-amd64-0.1.1/dyson .
        rm -rf dyson-linux-amd64-0.1.1
        mkdir -p ~/.config/dyson
        
        echo '[DigitalOcean]
        Token = ""
        
        [Cloudflare]
        Email = ""
        Token = ""
        
        [Secrets]
        GitCheckout = "./within-terraform-secret"' > ~/.config/dyson/dyson.ini
        
        ./dyson manifest \
          --name=maison \
          --domain=maison.within.website \
          --dockerImage=xena/maison:$GITHUB_SHA \
          --containerPort=5000 \
          --replicas=1 \
          --useProdLE=true > $GITHUB_WORKSPACE/deploy.yml
    - name: Save DigitalOcean kubeconfig
      uses: digitalocean/action-doctl@master
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
      with:
        args: kubernetes cluster kubeconfig show kubermemes > $GITHUB_WORKSPACE/.kubeconfig
    - name: Deploy to DigitalOcean Kubernetes
      uses: docker://lachlanevenson/k8s-kubectl
      with:
        args: --kubeconfig=/github/workspace/.kubeconfig apply -n apps -f /github/workspace/deploy.yml
    - name: Verify deployment
      uses: docker://lachlanevenson/k8s-kubectl
      with:
        args: --kubeconfig=/github/workspace/.kubeconfig rollout status -n apps deployment/maison
